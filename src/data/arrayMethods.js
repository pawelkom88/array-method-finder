const arrayMethods = [
  {
    id: 1,
    name: 'Array.splice()',
    usage: {
      example1: 'let arr = [1, 2, 3];',
      example3: "arr.splice(2, 0, 'HTML');",
    },
    output: "[1, 2, 'HTML', 3];",
    type: 'add',
    desc: 'Adds and/or removes elements from an array.',
    doc: 'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice',
  },
  {
    id: 2,
    name: 'Array.push()',
    usage: {
      example1: 'let arr = [1, 2, 3];',
      example3: "arr.push('HTML');",
    },
    output: "[1, 2, 3, 'HTML'];",
    type: 'addEnd',
    desc: 'Adds one or more elements to the end of an array and returns the new length of the array.',
    doc: 'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push',
  },
  {
    id: 3,
    name: 'Array.unshift()',
    usage: {
      example1: 'let arr = [1, 2, 3];',
      example3: "arr.unshift('HTML', 'CSS');",
    },
    output: "['HTML','CSS', 1, 2, 3];",
    type: 'addFront',
    desc: 'Adds one or more elements to the front of an array and returns the new length of the array.',
    doc: 'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift',
  },

  {
    id: 4,
    name: 'Array.concat()',
    usage: {
      example1: 'let arr = [1, 2, 3];',
      example2: 'let arr1 = [4, 5, 6];',
      example3: 'arr.concat(arr1);',
    },
    output: '[1, 2, 3, 4, 5, 6];',
    type: 'addOther',
    desc: 'Returns a new array comprised of this array joined with other array(s) and/or value(s).',
    doc: 'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat',
  },
  {
    id: 5,
    name: 'Array.splice()',
    usage: {
      example1: 'let arr = [1, 2, 3];',
      example3: "arr.splice(2, 0, 'HTML');",
    },
    output: "[1, 2, 'HTML', 3];",
    type: 'remove',
    desc: 'Adds and/or removes elements from an array.',
    doc: 'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice',
  },
  {
    id: 6,
    name: 'Array.pop()',
    usage: {
      example1: 'let arr = [1, 2, 3];',
      example3: 'arr.pop();',
    },
    output: '[1, 2];',
    type: 'removeLast',
    desc: 'Removes the last element from an array and returns that element.',
    doc: 'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/pop',
  },

  {
    id: 7,
    name: 'Array.shift()',
    usage: {
      example1: 'let arr = [1, 2, 3];',
      example3: 'arr.shift();',
    },
    output: '[2, 3];',
    type: 'removeFirst',
    desc: 'Removes the first element from an array and returns that element.',
    doc: 'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/shift',
  },

  {
    id: 8,
    name: 'Array.slice()',
    usage: {
      example1: 'let arr = [1, 2, 3];',
      example3: 'let slicedArr = arr.slice(1);',
    },
    output: '[2, 3];',
    type: 'removeOther',
    desc: 'The slice() method returns a shallow copy of a portion of an array into a new array object. You can specify either just the beginning element (where end will default to the arrays length) or both the beginning and the end, comma-separated. The original array will not be modified.',
    doc: 'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice',
  },

  {
    id: 9,
    name: 'Array.includes()',
    usage: {
      example1: 'let arr = [1, 2, 3];',
      example3: 'arr.includes(3);',
    },
    output: 'true',
    type: 'includes',
    desc: 'Determines whether an array contains a certain element, returning true or false as appropriate.',
    doc: 'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes',
  },

  {
    id: 10,
    name: 'Array.indexOf()',
    usage: {
      example1: 'let arr = [1, 2, 3];',
      example3: 'arr.indexOf(2);',
    },
    output: '3',
    type: 'firstIndex',
    desc: 'Returns the first index at which a given element can be found in the array, or -1 if it is not present.',
    doc: 'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf',
  },
  {
    id: 11,
    name: 'Array.lastIndexOf()',
    usage: {
      example1: 'let arr = [1, 2, 3];',
      example3: 'arr.lastIndexOf(4);',
    },
    output: '-1',
    type: 'lastIndex',
    desc: 'Returns the last (greatest) index of an element within the array equal to the specified value, or -1 if none is found.',
    doc: 'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/lastIndexOf',
  },
  {
    id: 12,
    name: 'Array.find()',
    usage: {
      example1: 'let arr = [1, 2, 3];',
      example2: 'function lessThanThree(el){ return el < 3 };',
      example3: 'arr.find(lessThanThree);',
    },
    output: '1',
    type: 'firstElement',
    desc: 'Returns THE FIRST element in the provided array that satisfies the provided testing function. If no values satisfy the testing function, undefined is returned. ',
    doc: 'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find',
  },
  {
    id: 13,
    name: 'Array.findIndex()',
    usage: {
      example1: 'let arr = [1, 2, 3];',
      example2: 'function biggerThanOne(el){ return el > 1 };',
      example3: 'arr.findIndex(biggerThanOne);',
    },
    output: '1',
    type: 'firstIndexCondition',
    desc: 'Returns the index of the first element in the array that satisfies the provided testing function. Otherwise -1 is returned. Similar to find(), but it returns THE INDEX instead of the item.',
    doc: 'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex',
  },
  {
    id: 14,
    name: 'Array.reduce()',
    usage: {
      example1: 'let arr = [1, 2, 3];',
      example2: 'function reducer(x,y){ return x + y };',
      example3: 'arr.reduce(reducer);',
    },
    output: '6',
    type: 'reduceStart',
    desc: 'Apply a function against an accumulator and each value of the array (from left-to-right) as to reduce it to a single value.',
    doc: 'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce',
  },
  {
    id: 15,
    name: 'Array.reduceRight()',
    usage: {
      example1: 'let arr = [1, 2, 3];',
      example2: 'function concatArr(x, y){ return x.concat(y) };',
      example3: '[ arr, [-1, -0]].reduceRight(concatArr,[]);',
    },
    output: '[-1, 0, 1, 2, 3]',
    type: 'reduceEnd',
    desc: 'Apply a function against an accumulator and each value of the array (from right-to-left) as to reduce it to a single value.',
    doc: 'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight',
  },
  {
    id: 16,
    name: 'Array.filter()',
    usage: {
      example1: 'let arr = [1, 2, 3];',
      example2: 'function filterArray(el){ return el <= 2 };',
      example3: 'arr.filter(filterArray);',
    },
    output: '[1, 2]',
    type: 'valueCondition',
    desc: 'Creates a new array with all of the elements of this array for which the provided filtering function returns true.',
    doc: 'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter',
  },
  {
    id: 17,
    name: 'Array.every()',
    usage: {
      example1: 'let arr = [1, 2, 3];',
      example2: 'function lessThanTen(el){ return el < 10 };',
      example3: 'arr.every(lessThanTen);',
    },
    output: 'true',
    type: 'everyItemCondition',
    desc: 'Returns true if every element in this array satisfies the provided testing function.',
    doc: 'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every',
  },
  {
    id: 18,
    name: 'Array.some()',
    usage: {
      example1: 'let arr = [1, 2, 3];',
      example2: 'function lessThanThree(el){ return el < 3 };',
      example3: 'arr.some(lessThanThree);',
    },
    output: 'true',
    type: 'atLeastOneItemCondition',
    desc: 'Returns true if at least one element in this array satisfies the provided testing function.',
    doc: 'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some',
  },
];

export default arrayMethods;
